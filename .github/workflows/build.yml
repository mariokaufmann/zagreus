name: build
on:
  workflow_call:
    inputs:
      version:
        required: true
        description: 'Version number'
        type: string
      push:
        description: 'Push docker image'
        required: false
        default: false
        type: boolean
      release:
        description: 'Do after-release steps'
        required: false
        default: false
        type: boolean

jobs:
  build:
    strategy:
      matrix:
        label: [ ubuntu-latest, windows-latest ]
        include:
          - label: ubuntu-latest
            script: chmod +x ./package.sh && ./package.sh linux
            artifact: zagreus-linux
          - label: macos-latest
            script: chmod +x ./package.sh && ./package.sh macos
            artifact: zagreus-macos
          - label: windows-latest
            script: .\package.ps1
            artifact: zagreus-windows
    runs-on: [ '${{ matrix.label }}' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: dtolnay/rust-toolchain@stable
      - name: Check formatting (server)
        run: |
          rustup component add rustfmt
          cargo fmt --quiet -- --check
      - name: Lint zagreus runtime
        run: |
          npm ci
          npm run lint
        working-directory: ./zagreus-runtime
      - name: Build zagreus runtime
        run: |
          npm ci
          npm run build
        working-directory: ./zagreus-runtime
      - name: Build zagreus swagger docs
        run: |
          npm ci
          npm run build
        working-directory: ./zagreus-swagger-docs
      - name: Lint, test and build (server)
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings
          cargo test
          cargo build --release
      - name: Package
        run: ${{ matrix.script }}
        working-directory: ./package
      - name: E2E tests
        if: ${{ matrix.label == 'ubuntu-latest' }}
        uses: cypress-io/github-action@v4
        with:
          start: bash prepare_e2e.sh
          working-directory: e2e-test
          browser: chrome
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: package/${{ matrix.artifact }}.zip
      - name: Log in to Docker Hub
        if: ${{ matrix.label == 'ubuntu-latest' && inputs.push }}
        uses: docker/login-action@v3
        with:
          username: mariokaufmann
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker build
        if: ${{ matrix.label == 'ubuntu-latest' }}
        uses: docker/build-push-action@v6
        with:
          context: docker
          push: ${{ inputs.push }}
          tags: mariokaufmann/zagreus:${{ inputs.version }}
      - name: Attach release artifacts
        if: ${{ inputs.release }}
        uses: softprops/action-gh-release@v2
        with:
          files: package/${{ matrix.artifact }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}