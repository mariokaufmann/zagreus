openapi: 3.0.2
info:
  title: Zagreus Server API
  version: 0.0.9
  description: description of the zagreus server HTTP API
  license:
    name: MIT License
    url: 'https://github.com/mariokaufmann/zagreus/blob/main/LICENSE'
  x-logo:
    url: ''
servers:
  - url: /
paths:
  /api/version:
    summary: Get server version
    description: Returns the zagreus server version
    get:
      tags:
        - general
      responses:
        '200':
          content:
            text/plain:
              example: 0.0.1
          description: Version retrieved successfully.
  '/api/asset':
    summary: Manage template assets
    post:
      description: Uploads the given asset to the server so that it can be used from a template (with asset source 'zagreus')
      requestBody:
        description: The asset file to upload.
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                file:
                  format: binary
                  type: string
      tags:
        - asset
      operationId: uploadAsset
      responses:
        '200':
          content:
            application/json:
              example: { name: "b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9.png" }
          description: Asset uploaded successfully
  '/api/instance/{instanceName}/data/text':
    summary: Set the text content of a text element
    description: 'Searches for an element with the given id and sets its text content to the given value'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - text
              properties:
                id:
                  type: string
                text:
                  type: string
                client:
                  type: number
              example:
                id: ScoreboardTimeText
                text: '12:15'
      tags:
        - data
      operationId: setText
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/data/class/add':
    summary: Adds a CSS class to an element
    description: 'Searches for an element with the given id and adds the given CSS class from the element'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - class
              properties:
                id:
                  type: string
                class:
                  type: string
                client:
                  type: number
              example:
                id: Scoreboard
                class: 'active-element'
      tags:
        - data
      operationId: addClass
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/data/class/remove':
    summary: Removes a CSS class from an element
    description: 'Searches for an element with the given id and removes the given CSS class from the element'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - class
              properties:
                id:
                  type: string
                class:
                  type: string
                client:
                  type: number
              example:
                id: Scoreboard
                class: 'active-element'
      tags:
        - data
      operationId: removeClass
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/data/animation':
    summary: Execute an animation
    description: 'Executes the animation with the given name (and optionally queues it)'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  required: true
                  description: The name of the animation
                  example: ScoreboardHide
                queue:
                  type: string
                  description: The name of the queue to put the animation into. Animations in the same queue will be executed after each other
                  example: Scoreboard
      tags:
        - data
      operationId: executeAnimation
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/data/image':
    summary: Set source of image element
    description: 'Searches for the image element with the given id and sets its source to the given asset. If the asset source is zagreus, the image will be loaded from the zagreus server (see asset upload), otherwise from where the template itself is served'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - asset
                - assetSource
              properties:
                id:
                  type: string
                asset:
                  type: string
                assetSource:
                  type: string
                  enum:
                    - template
                    - zagreus
                client:
                  type: number
              example:
                id: ScoreboardTeamImage
                asset: 'logo.png'
                assetSource: 'zagreus'
      tags:
        - data
      operationId: setImageSource
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/data/custom-variable':
    summary: Set value of CSS custom variable
    description: 'Sets the value of the CSS custom variable with the given name'
    parameters:
      - $ref: '#/components/parameters/instanceName'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - value
              properties:
                name:
                  type: string
                value:
                  type: string
                client:
                  type: number
              example:
                name: "--logo-color"
                value: '#00FF00'
      tags:
        - data
      operationId: setCustomVariable
      responses:
        '200':
          $ref: '#/components/responses/200'
  '/api/instance/{instanceName}/state':
    summary: Manage client state in an instance
    get:
      description: Gets the values for the state with the given name
      parameters:
        - $ref: '#/components/parameters/instanceName'
        - name: name
          in: query
          description: The name of the state to get
          required: true
          schema:
            type: string
            example: ScoreboardVisible
      tags:
        - state
      operationId: getState
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - clients_set
                  - clients_unset
                properties:
                  clientsUnset:
                    type: array
                    items:
                      type: number
                  clientSet:
                    type: object
                    required:
                      - value
                      - clients
                    properties:
                      value:
                        type: string
                      clients:
                        type: array
                        items:
                          type: number
          description: State retrieved successfully
    post:
      description: Sets the state with the given name to the given value for all connected clients on that instance
      parameters:
        - $ref: '#/components/parameters/instanceName'
      requestBody:
        description: The state and value to set
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                value:
                  type: string
              example:
                name: ScoreboardVisible
                value: notVisible
      tags:
        - state
      operationId: setState
      responses:
        '200':
          $ref: '#/components/responses/200'
components:
  parameters:
    instanceName:
      example: my-template-1
      name: instanceName
      description: The template instance that the command is relative to
      schema:
        description: >-
          An instance name must consist of more than zero alphanumeric or '-'
          characters.
        pattern: '^[\-a-z0-9]+$'
        type: string
        example: my-template-1
      in: path
      required: true
  responses:
    '200':
      description: Operation succeeded
tags:
  - name: general
    description: General operations
  - name: asset
    description: Operations for managing assets
  - name: data
    description: Operations for manipulating the data in a template
  - name: state
    description: Operations for manipulating the client states
externalDocs:
  description: Source repository
  url: 'https://github.com/mariokaufmann/zagreus'
security: [ ]
